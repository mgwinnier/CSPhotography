{"ast":null,"code":"var _jsxFileName = \"C:\\\\got\\\\GOTv2\\\\src\\\\contact.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport ReCAPTCHA from 'react-google-recaptcha';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContactForm = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    subject: '',\n    message: ''\n  });\n  const [recaptchaToken, setRecaptchaToken] = useState('');\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.id]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!recaptchaToken) {\n      alert('Please verify you are not a robot.');\n      return;\n    }\n    const dataToSend = {\n      ...formData,\n      recaptcha: recaptchaToken\n    };\n    try {\n      const response = await axios.post('https://kez9uy6df0.execute-api.us-east-2.amazonaws.com/default/EmailCaptchaGOT', dataToSend);\n      console.log('Email sent successfully!', response.data);\n      alert('Message sent successfully!');\n      setFormData({\n        name: '',\n        email: '',\n        subject: '',\n        message: ''\n      });\n      setRecaptchaToken('');\n    } catch (error) {\n      console.error('Failed to send email', error);\n      alert('Failed to send message. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center min-h-screen bg-gray-100\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-4xl font-bold text-center mb-4\",\n      children: \"Contact Gramps of Tennessee\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-8 rounded-lg shadow-md w-full max-w-md border-4 border-yellow-500\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"contact-form\",\n        onSubmit: handleSubmit,\n        className: \"flex flex-col space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          placeholder: \"Name\",\n          required: true,\n          value: formData.name,\n          onChange: handleChange,\n          className: \"p-2 border rounded-md\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          placeholder: \"Email\",\n          required: true,\n          value: formData.email,\n          onChange: handleChange,\n          className: \"p-2 border rounded-md\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"subject\",\n          placeholder: \"Subject\",\n          required: true,\n          value: formData.subject,\n          onChange: handleChange,\n          className: \"p-2 border rounded-md\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"message\",\n          rows: \"6\",\n          placeholder: \"Your Message\",\n          required: true,\n          value: formData.message,\n          onChange: handleChange,\n          className: \"p-2 border rounded-md\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ReCAPTCHA, {\n          sitekey: \"6LfktoYpAAAAAF3Nl1WaITq97YA74mG0t4KzljQq\",\n          onChange: token => setRecaptchaToken(token),\n          onExpired: () => setRecaptchaToken(''),\n          className: \"flex justify-center\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"bg-blue-500 text-white p-2 rounded-md hover:bg-blue-600\",\n          children: \"Send Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(ContactForm, \"RphlUgVIpr/lFNYjIV0cH1ruZow=\");\n_c = ContactForm;\nexport default ContactForm;\nvar _c;\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"names":["React","useState","axios","ReCAPTCHA","jsxDEV","_jsxDEV","ContactForm","_s","formData","setFormData","name","email","subject","message","recaptchaToken","setRecaptchaToken","handleChange","e","target","id","value","handleSubmit","preventDefault","alert","dataToSend","recaptcha","response","post","console","log","data","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","required","onChange","rows","sitekey","token","onExpired","_c","$RefreshReg$"],"sources":["C:/got/GOTv2/src/contact.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport ReCAPTCHA from 'react-google-recaptcha';\r\n\r\nconst ContactForm = () => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    subject: '',\r\n    message: '',\r\n  });\r\n  const [recaptchaToken, setRecaptchaToken] = useState('');\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!recaptchaToken) {\r\n      alert('Please verify you are not a robot.');\r\n      return;\r\n    }\r\n\r\n    const dataToSend = {\r\n      ...formData,\r\n      recaptcha: recaptchaToken,\r\n    };\r\n\r\n    try {\r\n      const response = await axios.post('https://kez9uy6df0.execute-api.us-east-2.amazonaws.com/default/EmailCaptchaGOT', dataToSend);\r\n      console.log('Email sent successfully!', response.data);\r\n      alert('Message sent successfully!');\r\n      setFormData({\r\n        name: '',\r\n        email: '',\r\n        subject: '',\r\n        message: '',\r\n      });\r\n      setRecaptchaToken('');\r\n    } catch (error) {\r\n      console.error('Failed to send email', error);\r\n      alert('Failed to send message. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-100\">\r\n      <h1 className=\"text-4xl font-bold text-center mb-4\">Contact Gramps of Tennessee</h1>\r\n      <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md border-4 border-yellow-500\">\r\n        <form id=\"contact-form\" onSubmit={handleSubmit} className=\"flex flex-col space-y-4\">\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            placeholder=\"Name\"\r\n            required\r\n            value={formData.name}\r\n            onChange={handleChange}\r\n            className=\"p-2 border rounded-md\"\r\n          />\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            placeholder=\"Email\"\r\n            required\r\n            value={formData.email}\r\n            onChange={handleChange}\r\n            className=\"p-2 border rounded-md\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            id=\"subject\"\r\n            placeholder=\"Subject\"\r\n            required\r\n            value={formData.subject}\r\n            onChange={handleChange}\r\n            className=\"p-2 border rounded-md\"\r\n          />\r\n          <textarea\r\n            id=\"message\"\r\n            rows=\"6\"\r\n            placeholder=\"Your Message\"\r\n            required\r\n            value={formData.message}\r\n            onChange={handleChange}\r\n            className=\"p-2 border rounded-md\"\r\n          />\r\n          <ReCAPTCHA\r\n            sitekey=\"6LfktoYpAAAAAF3Nl1WaITq97YA74mG0t4KzljQq\"\r\n            onChange={token => setRecaptchaToken(token)}\r\n            onExpired={() => setRecaptchaToken('')}\r\n            className=\"flex justify-center\"\r\n          />\r\n          <button type=\"submit\" className=\"bg-blue-500 text-white p-2 rounded-md hover:bg-blue-600\">Send Message</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}